<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ARMTemplate_AppPostfix" xml:space="preserve">
    <value>App</value>
  </data>
  <data name="ARMTemplate_MyPrefix" xml:space="preserve">
    <value>Meine</value>
  </data>
  <data name="Deployment_DeploymentInProgress" xml:space="preserve">
    <value>Die Bereitstellung wird ausgeführt.</value>
  </data>
  <data name="Deployment_GitDeploymentInProgress" xml:space="preserve">
    <value>Die Git-Bereitstellung wird ausgeführt.</value>
  </data>
  <data name="Error_GeneralErrorMessage" xml:space="preserve">
    <value>Fehler. Bitte versuchen Sie es später erneut.</value>
  </data>
  <data name="Error_GettingPublishingProfileStream" xml:space="preserve">
    <value>Das Veröffentlichungsprofil kann nicht abgerufen werden. Bitte versuchen Sie es später erneut.</value>
  </data>
  <data name="Error_InvalidAppServiceType" xml:space="preserve">
    <value>Der App Service muss vom Typ "Mobil" sein, um mobile Clients herunterzuladen.</value>
  </data>
  <data name="Error_InvalidGithubRepo" xml:space="preserve">
    <value>Der GitHub-Repository-URI ist ungültig oder stammt von einer vertrauenswürdigen Organisation.</value>
  </data>
  <data name="Error_InvalidMobileResourceGroup" xml:space="preserve">
    <value>The Mobile resourcegroup has not been checked out</value>
  </data>
  <data name="Error_InvalidUserIdentity" xml:space="preserve">
    <value>Ungültiger Benutzer.</value>
  </data>
  <data name="Error_MoreThanOneFreeResource" xml:space="preserve">
    <value>Sie können nur eine kostenlose Ressource gleichzeitig verwenden.</value>
  </data>
  <data name="Error_NoFreeResourcesAvailable" xml:space="preserve">
    <value>Zurzeit sind keine kostenlosen Ressourcen verfügbar. Bitte versuchen Sie es später erneut.</value>
  </data>
  <data name="Error_OrgIdNotSupported" xml:space="preserve">
    <value>Leider werden Organisationskonten nicht unterstützt. Bitte verwenden Sie ein Microsoft-Konto.</value>
  </data>
  <data name="Error_ResourceExpirationTimeAlreadyExtended" xml:space="preserve">
    <value>Die Ressourcenablaufzeit wurde bereits verlängert. Sie können die Ablaufzeit für eine Ressource nur ein Mal verlängern.</value>
  </data>
  <data name="Error_UnsupportedPlatform" xml:space="preserve">
    <value>Nicht unterstützte Plattform.</value>
  </data>
  <data name="Templates_APIAppDescription" xml:space="preserve">
    <value>Mit Azure-API-Apps können Sie ganz einfach APIs erstellen, hosten und nutzen, die in einer Vielzahl von Sprachen geschrieben wurden. Profitieren Sie von der sofort verfügbaren API-Sicherheit, der Konnektivität mit lokalen Ressourcen und der Unterstützung für Swagger-Definitionen.</value>
  </data>
  <data name="Templates_FieldEngineerDescription" xml:space="preserve">
    <value>Eine mobile Dashboard-App für Techniker eines Kabelnetzbetreibers oder andere mobile Mitarbeiter, die für Xamarin Forms verfügbar ist. Das vollständige Codebeispiel finden Sie unter "&lt;a href="https://github.com/azure/fieldengineer/" target="_blank"&gt;https://github.com/azure/fieldengineer/&lt;/a&gt;".</value>
  </data>
  <data name="Templates_LinuxDescription" xml:space="preserve">
    <value>Mit dieser Vorlage wird eine Linux-Web-App erstellt.</value>
  </data>
  <data name="Templates_PingSiteDescription" xml:space="preserve">
    <value>Diese Logik-App-Vorlage führt Ping für eine Website gemäß einer Zeitplanserie aus. Sie können sie so erweitern, dass abhängig vom Ergebnis des Ping-Vorgangs eine Aktion ausgeführt wird.</value>
  </data>
  <data name="Templates_TodoListDescription" xml:space="preserve">
    <value>Dies ist eine einfache Aufgabenlisten-App für iOS, Android, Xamarin und HTML/JS.</value>
  </data>
  <data name="Templates_XamarinCrmDescription" xml:space="preserve">
    <value>Eine mobile Vertriebsdashboard-CRM-App, die für Xamarin Forms verfügbar ist. Das vollständige Codebeispiel finden Sie unter "&lt;a href="https://github.com/xamarin/app-crm/" target="_blank"&gt;https://github.com/xamarin/app-crm/&lt;/a&gt;".</value>
  </data>
</root>